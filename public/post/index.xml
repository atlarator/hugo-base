<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on VZstless</title>
    <link>https://vzstless.moe/post/</link>
    <description>Recent content in Posts on VZstless</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>VZstless</copyright>
    <lastBuildDate>Sun, 14 Sep 2025 02:59:24 +0000</lastBuildDate>
    <atom:link href="https://vzstless.moe/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>C&#43;&#43;的那些事</title>
      <link>https://vzstless.moe/p/c-%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B/</link>
      <pubDate>Sun, 14 Sep 2025 02:59:24 +0000</pubDate>
      <guid>https://vzstless.moe/p/c-%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B/</guid>
      <description>&lt;h3 id=&#34;内部细节&#34;&gt;内部细节&lt;/h3&gt;&#xA;&lt;p&gt;能const auto &amp;amp;就const auto &amp;amp;，能引用就引用&lt;/p&gt;&#xA;&lt;p&gt;vector：分配一大块连续的内存空间，每次空间不够用的时候把原有的空间翻倍进行扩容（这个过程中原有的元素会重新移位），对前插不友好故没有前插的实现&#xA;deque：分配一些较为平均且碎片化的空间并向这些空间的首个元素设置索引指针。每次插入时如果空间不够就再分配一小块空间，故对前插和后插都很友好，但是比vector慢&#xA;map：把每对键-值作为节点的一棵红黑树，所以map的key必须实现了＜的运算符重载&#xA;set：本质上是没有key的map&#xA;unordered_map：哈希表，所以key必须是可哈希化的。当load factor过大时会进行rehash重新分配哈希值&#xA;array：固定的连续空间&#xA;list：双链表（对，它的内部实现就是你理解的那样）&lt;/p&gt;</description>
    </item>
    <item>
      <title>“帮我选个字体吧！”</title>
      <link>https://vzstless.moe/p/%E5%B8%AE%E6%88%91%E9%80%89%E4%B8%AA%E5%AD%97%E4%BD%93%E5%90%A7/</link>
      <pubDate>Sat, 13 Sep 2025 01:27:43 +0000</pubDate>
      <guid>https://vzstless.moe/p/%E5%B8%AE%E6%88%91%E9%80%89%E4%B8%AA%E5%AD%97%E4%BD%93%E5%90%A7/</guid>
      <description>&lt;p&gt;近期折腾社团报纸总结了好多出版方面的知识，这里先写一点关于字体的。&lt;br&gt;&#xA;最大的头版要用大家有点“刻板印象”很适合用来上头版的字体，或者说这种字不一定耐读，但是看着一定要大气，一定要有那种我出来就是权威的感觉。如果是中文，推荐草檀毛泽东字体，如果是西文可以用Chomsky。&lt;/p&gt;</description>
    </item>
    <item>
      <title>失败的远征</title>
      <link>https://vzstless.moe/p/%E5%A4%B1%E8%B4%A5%E7%9A%84%E8%BF%9C%E5%BE%81/</link>
      <pubDate>Wed, 27 Aug 2025 13:34:05 +0000</pubDate>
      <guid>https://vzstless.moe/p/%E5%A4%B1%E8%B4%A5%E7%9A%84%E8%BF%9C%E5%BE%81/</guid>
      <description>&lt;p&gt;2025年8月27日早间7时16分29秒，我决定开始把Linux From Scratch当成mini hackathon进行学习，终于下午六时左右因grub安装失误前功尽弃。&lt;br&gt;&#xA;LFS被设计在一次会话中完成，其中包含且不限于磁盘分区，grub，硬写系统文件，硬写网卡，持续时间极其长的测试以及循环往复的tar，configure，make，make check，make install。中途还有大量的前后强制依赖——前脚编译出的tcl和expect要用来写gcc的测试，前脚编译出的gcc和binutils后脚就要用来编译后面的工具链，刚才编译的python后面就要用pip装包，以及meson，ninja之类的构建软件，大量重复且有细微差别的活动叠加的后果是毁灭性的，总之一步错步步错。&lt;br&gt;&#xA;这是一个强度远高于之前的两次“系统构建”的活动——前两次中一次只要编译Linux Kernel，准备FHS，把busybox丢进去然后启动qemu，后一次至少你只需要看手册，和其他的装系统有异曲同工之处。但这个不一样，从头开始你都要自己做，工具自己编译，测试自己运行，引导配不好甚至能直接弄坏主系统。总之，不要因为这个工程不涉及写代码就低估了它的工作量。&lt;br&gt;&#xA;虽说这次构建失败了，但是还是收获了不少东西——最重要的就是谁在什么包中，谁依赖于谁，你自己成为了一个人形的包管理器和makefile，一步一步把之前你搜索的“xxx is in which package”给探明，还是很爽的，其次在这个过程中你还可以掌握加快测试和编译的一般方法，度量时间消耗并知晓Linux中你未曾接触过的底层文件和其他环境变量的细节。Linux From Scratch的Scratch之处不只是因为它从bare metal开始，更重要的是它能够带你以手动trace的视角来遍览整个Linux，这是Arch Linux的安装所不能带给你的。&lt;br&gt;&#xA;下一步也许我应该看看grub和启动引导相关的知识了？我在它上栽了无数次，下一次装系统再出问题可就不应该了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>DL First Taste</title>
      <link>https://vzstless.moe/p/dl-first-taste/</link>
      <pubDate>Sat, 23 Aug 2025 12:20:01 +0800</pubDate>
      <guid>https://vzstless.moe/p/dl-first-taste/</guid>
      <description>&lt;h2 id=&#34;lecture-1&#34;&gt;Lecture 1&lt;/h2&gt;&#xA;&lt;p&gt;neuron: a function that records a feature&lt;br&gt;&#xA;connection: a number of weight&lt;br&gt;&#xA;spread: calculate the function, times the weight, sum the bias and impulse using ReLU(modern way) or Sigmoid(older way)&lt;/p&gt;&#xA;&lt;p&gt;Deep Learning itself is just build a huge function.&lt;/p&gt;&#xA;&lt;h2 id=&#34;lecture-2&#34;&gt;Lecture 2&lt;/h2&gt;&#xA;&lt;p&gt;Cost: how the whole network recognizes your data&lt;br&gt;&#xA;It&amp;rsquo;s always easy to find a local minimum in a function&lt;br&gt;&#xA;The way to calculate the gradient descent is backpropagation&lt;/p&gt;</description>
    </item>
    <item>
      <title>关于电脑的问与答</title>
      <link>https://vzstless.moe/p/%E5%85%B3%E4%BA%8E%E7%94%B5%E8%84%91%E7%9A%84%E9%97%AE%E4%B8%8E%E7%AD%94/</link>
      <pubDate>Wed, 20 Aug 2025 07:18:16 +0800</pubDate>
      <guid>https://vzstless.moe/p/%E5%85%B3%E4%BA%8E%E7%94%B5%E8%84%91%E7%9A%84%E9%97%AE%E4%B8%8E%E7%AD%94/</guid>
      <description>&lt;h2 id=&#34;什么是电脑&#34;&gt;什么是电脑？&lt;/h2&gt;&#xA;&lt;p&gt;电脑是一种能够对同级别设备与其他设备进行底层修改或更高层级修改的工具。&lt;br&gt;&#xA;举例来说，电脑可以给电脑装系统，电脑可以给手机刷机，电脑也可以给平板装系统，电脑也可以制作别的设备的启动盘甚至挂载其他的文件系统。&lt;/p&gt;</description>
    </item>
    <item>
      <title>济南拼面寻味记</title>
      <link>https://vzstless.moe/p/%E6%B5%8E%E5%8D%97%E6%8B%BC%E9%9D%A2%E5%AF%BB%E5%91%B3%E8%AE%B0/</link>
      <pubDate>Sat, 16 Aug 2025 09:05:33 +0800</pubDate>
      <guid>https://vzstless.moe/p/%E6%B5%8E%E5%8D%97%E6%8B%BC%E9%9D%A2%E5%AF%BB%E5%91%B3%E8%AE%B0/</guid>
      <description>&lt;p&gt;202x年8月1x日，午间时分，距离我回家的火车从济南站开走还有约六个小时。&lt;/p&gt;&#xA;&lt;p&gt;我靠，我为什么要选择骑自行车来游历这里的小吃街，我骑了十公里还没骑到，我快饿死了。那里离我所处的位置还有二十公里，我骑不动了，随便找个华香面粥吃一口垫吧垫吧得了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Arch Linux安装初体验</title>
      <link>https://vzstless.moe/p/arch-linux%E5%AE%89%E8%A3%85%E5%88%9D%E4%BD%93%E9%AA%8C/</link>
      <pubDate>Tue, 15 Jul 2025 19:51:37 +0800</pubDate>
      <guid>https://vzstless.moe/p/arch-linux%E5%AE%89%E8%A3%85%E5%88%9D%E4%BD%93%E9%AA%8C/</guid>
      <description>&lt;p&gt;什么嘛，Arch Linux哪里劝退了（）&lt;/p&gt;&#xA;&lt;p&gt;观前提醒，遇到问题先查手册，本篇专栏仅进行踩坑记录&lt;/p&gt;&#xA;&lt;h2 id=&#34;从镜像到启动&#34;&gt;从镜像到启动&lt;/h2&gt;&#xA;&lt;p&gt;配置键盘布局和字体，验证引导模式，验证互联网连接，更新系统时间，然后是磁盘分区。&lt;br&gt;&#xA;磁盘分区就是第一个坑，一定要给root和efi划够，哪怕你的swap只有8G也没事，把它俩先照顾好，要不然后面装固件和内核的时候直接失败。&lt;br&gt;&#xA;挂载对应分区（一定不要挂错了！挂错了后面装固件和内核还是莫名失败！）。&lt;br&gt;&#xA;获取中国大陆的镜像站列表，取消清华源和科大源的注释，使用pacstrap安装启动必需的软件包，使用pacman安装vim和dhcpcd（至少要把vim装了，然后dhcpcd在后面网络配置的时候有大用，如果嫌麻烦还要安装NetworkManager）。&lt;br&gt;&#xA;fstab，arch-chroot，设置时区（后面可以通过网络授时把漂移问题解决），本地化，配置主机名，设置root密码（这一部分抄手册即可）。&lt;br&gt;&#xA;安装grub。好，劲爆尾杀。最难看懂的部分来了。这里在稍微skim了一下GRUB的wiki页面之后我在GPT-4o上使用了如下prompt：&lt;/p&gt;</description>
    </item>
    <item>
      <title>随手记下的乐理知识</title>
      <link>https://vzstless.moe/p/%E9%9A%8F%E6%89%8B%E8%AE%B0%E4%B8%8B%E7%9A%84%E4%B9%90%E7%90%86%E7%9F%A5%E8%AF%86/</link>
      <pubDate>Sun, 06 Jul 2025 15:10:33 +0800</pubDate>
      <guid>https://vzstless.moe/p/%E9%9A%8F%E6%89%8B%E8%AE%B0%E4%B8%8B%E7%9A%84%E4%B9%90%E7%90%86%E7%9F%A5%E8%AF%86/</guid>
      <description>&lt;p&gt;一些根据OzaShin Music Channel的讲座汉化版随堂做的笔记&lt;/p&gt;&#xA;&lt;h2 id=&#34;基础篇&#34;&gt;基础篇&lt;/h2&gt;&#xA;&lt;p&gt;音名，音程，全音，半音&lt;/p&gt;&#xA;&lt;p&gt;全全半全全全半的排列直接平移就能得到大调音阶，从C开始即为C大调&lt;/p&gt;</description>
    </item>
    <item>
      <title>浅谈MIT-6.102</title>
      <link>https://vzstless.moe/p/%E6%B5%85%E8%B0%88mit-6.102/</link>
      <pubDate>Thu, 15 May 2025 19:45:58 +0800</pubDate>
      <guid>https://vzstless.moe/p/%E6%B5%85%E8%B0%88mit-6.102/</guid>
      <description>&lt;p&gt;常看我博客的朋友应该知道，我一直对软件工程这样集中于“生产关系”的学科不屑一顾。一部分原因是校内这些明面上搞“软件工程”的人每天就在研究GUI是不是所谓的“反人类”，然后研究在各种各样的corner case怎么用一个error来告诉用户我们崩了。你要光研究这个那还说啥呢？最后搞计算机的看本专业的所谓“管理学”不行，还得和隔壁的经管系取经，耽误了大量的时间，还把计算机真正该研究的东西变成了“黑箱”。&lt;br&gt;&#xA;然而MIT-6.102不是这样的，它是一个全方位的习惯培养。先告诉你当你单人工作的时候怎么做可维护，问题早出现早治疗的程序，再告诉你团队里的人可以使用什么方法来使得一个更大规模的项目怎么做得更优雅，最后深入语言的实现细节，告诉你什么该用什么不该用。最后还做了一个关于五线谱的小型语言进行这些概念的实践。可以说，软件工程在这里真正变成了一个身体力行的学科，而不是所谓的“生产关系”的嘴炮与空谈，更不是挪移给经管系的高高在上还没什么用的课程。&lt;br&gt;&#xA;另一面，你可以透过这节课对Rust祛魅。把变量设置在最小的可用范围，让绝大多数的变量不可变，注意内存问题，并发的时候善用promise，加入静态类型检查，加入对函数式编程的思想与内容&amp;hellip;&amp;hellip;你可以惊艳于这些“身体力行”的概念在十多年前便经由一门语言实现了，也可以明白那些执迷于所谓“Rust至上”的人为何愚蠢——既然这一切是身体力行的理念，那为什么不自己实践一下呢？&lt;/p&gt;</description>
    </item>
    <item>
      <title>计算机数学杂项</title>
      <link>https://vzstless.moe/p/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%95%B0%E5%AD%A6%E6%9D%82%E9%A1%B9/</link>
      <pubDate>Sun, 04 May 2025 19:58:00 +0800</pubDate>
      <guid>https://vzstless.moe/p/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%95%B0%E5%AD%A6%E6%9D%82%E9%A1%B9/</guid>
      <description>&lt;p&gt;(a + b) % c = ((a % c) + (b % c)) % c&lt;br&gt;&#xA;(a - b) % c = ((a % c) - (b % c)) % c&lt;br&gt;&#xA;(a * b) % c = ((a % c) * (b % c)) % c&lt;/p&gt;&#xA;&lt;p&gt;C++中的 &lt;code&gt;std::__gcd(a, b)&lt;/code&gt; 可用于计算最大公约数&lt;br&gt;&#xA;裴蜀定理：如果a和b均为整数，则有整数x和y满足ax + by = gcd(a, b)&lt;/p&gt;</description>
    </item>
    <item>
      <title>OSTEP为什么好</title>
      <link>https://vzstless.moe/p/ostep%E4%B8%BA%E4%BB%80%E4%B9%88%E5%A5%BD/</link>
      <pubDate>Mon, 28 Apr 2025 14:33:15 +0800</pubDate>
      <guid>https://vzstless.moe/p/ostep%E4%B8%BA%E4%BB%80%E4%B9%88%E5%A5%BD/</guid>
      <description>&lt;p&gt;断断续续把OSTEP看完了，最开始看内存虚拟化的时候弃掉了一段时间，后来又捡了回来，因为别的OS textbook太烂了😂&lt;br&gt;&#xA;为什么OSTEP好？说实话，免费反而是最后要提及的有点，除了美国那边课本死贵死贵之外感觉国内的课本基本上要么用二手要么直接下电子版的了。一本Operating System Concepts哪怕是国内的大黑书也要158一本，不过又有多少人会买呢？&lt;br&gt;&#xA;首先一个好的地方是这本书没有过分聚焦到COA或者ICS应当聚焦的部分，直截了当地告诉你操作系统在哪儿，解决了你在COA或者ICS中没碰见的什么问题。OSC和MOS两本书都是要先给你满嘴口水地讲COA和ICS中嚼烂的内容，估计也就学唐XX计组没学明白的人需要这些内容了吧&amp;hellip;&amp;hellip;当然，硬盘的基本原理它还是给你讲了讲，防止你文件系统直接抓瞎（但其实这个部分可以砍掉，既然你第一章推荐了csapp那这部分可以默认讲过）&lt;br&gt;&#xA;其次就是真实。告诉你历史上怎么做的，怎么演化成如今的样子的。几乎所有的示例都会附上对应的在真实世界中能用的API示例代码。这里的一个反例就是MOS，过分地“又臭又长”，而且示例代码还不那么make sense。重点是每章后方的参考文献都给了你阅读指导，告诉你你不仅应该看这本书，还应该再看看这些内容的相关一手消息。&lt;br&gt;&#xA;至于文风的幽默什么的，也在“真实”和“参考文献”面前不值一提了。既然一本书能够告诉你正确的案例为什么正确，错误的案例是怎么一步一步走向bug的，那你为什么还要选别人呢？OSDP书后的Minix代码已经在网上开源了，而OSDP在国内也停售很久了，再往后就是OSC，没了。交大的那本书还没推开，总之OSTEP从现在的视角看也许算是“独孤求败”的典型代表？&lt;br&gt;&#xA;OSTEP之后呢？其实你应该看看apue，水课或者别的时候翻翻看看，然后看看Great Ideas in Computer System Design，也是书后多次推荐的好文章。最后书后的minilab很多（也许近两年jyy就是受此启发把OSlab干掉了？），看看源码，再看看xv6-riscv，不想做实验看看源码也行，毕竟不是所有人都想做那样的脏活累活，不是吗？或者如果你真有兴趣可以看看分布式系统相关的内容，不过那部分太难了，我也没学多少，就不说了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>UNIX系统编程杂谈</title>
      <link>https://vzstless.moe/p/unix%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B%E6%9D%82%E8%B0%88/</link>
      <pubDate>Tue, 25 Mar 2025 16:40:59 +0800</pubDate>
      <guid>https://vzstless.moe/p/unix%E7%B3%BB%E7%BB%9F%E7%BC%96%E7%A8%8B%E6%9D%82%E8%B0%88/</guid>
      <description>&lt;p&gt;最近在pwn.college做不下去的时候试了试UNIX系统编程，在查阅“程序的开始与终止”的资料的时候有评论觉得apue不适合如今的UNIX环境了，推荐了&lt;em&gt;The Linux Programming Interface&lt;/em&gt;和&lt;em&gt;Understanding UNIX/Linux Programming&lt;/em&gt;（下文简称为UULP）两本书，遂花了半个多月的时间学了后者。我没全学完，但是学了之后我觉得大概率之后我不会大范围涉足这个领域了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>程序的开始与终止</title>
      <link>https://vzstless.moe/p/%E7%A8%8B%E5%BA%8F%E7%9A%84%E5%BC%80%E5%A7%8B%E4%B8%8E%E7%BB%88%E6%AD%A2/</link>
      <pubDate>Thu, 13 Mar 2025 17:07:52 +0800</pubDate>
      <guid>https://vzstless.moe/p/%E7%A8%8B%E5%BA%8F%E7%9A%84%E5%BC%80%E5%A7%8B%E4%B8%8E%E7%BB%88%E6%AD%A2/</guid>
      <description>&lt;h2 id=&#34;main-函数与程序的启动&#34;&gt;main 函数与程序的启动&lt;/h2&gt;&#xA;&lt;p&gt;main没有原型，启用main需要一个特殊的启动流程&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3&#xA;&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-C&#34; data-lang=&#34;C&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;int&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;argc&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;char&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;argv&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[])&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nf&#34;&gt;printf&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;main is at 0x%lX&lt;/span&gt;&lt;span class=&#34;se&#34;&gt;\n&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;kt&#34;&gt;unsigned&lt;/span&gt; &lt;span class=&#34;kt&#34;&gt;long&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;);&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;使用c89标准编译后的输出结果与readelf的entry point不同&lt;br&gt;&#xA;使用gdb，发现&lt;code&gt;_start&lt;/code&gt;，先跳转到&lt;code&gt;___start&lt;/code&gt;，启动&lt;code&gt;_exit&lt;/code&gt;和&lt;code&gt;__libc_init&lt;/code&gt;，然后跳入&lt;code&gt;main&lt;/code&gt;&lt;br&gt;&#xA;执行完程序内所有行为后回到&lt;code&gt;___start&lt;/code&gt;&lt;br&gt;&#xA;阅读&lt;code&gt;crt0.S&lt;/code&gt;发现内存布局和库函数相关的初始化数据（源实验环境为NetBSD）&lt;br&gt;&#xA;在&lt;code&gt;cc&lt;/code&gt;中可以使用&lt;code&gt;-e&lt;/code&gt;指定程序的入口函数&lt;br&gt;&#xA;在gdb中查看&lt;code&gt;$rip&lt;/code&gt;发现非法的地址访问，产生了段错误，当将这个指定的入口函数使用&lt;code&gt;exit()&lt;/code&gt;退出时程序段错误消失&lt;/p&gt;</description>
    </item>
    <item>
      <title>玩转虚拟内存</title>
      <link>https://vzstless.moe/p/%E7%8E%A9%E8%BD%AC%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98/</link>
      <pubDate>Fri, 07 Mar 2025 08:42:42 +0800</pubDate>
      <guid>https://vzstless.moe/p/%E7%8E%A9%E8%BD%AC%E8%99%9A%E6%8B%9F%E5%86%85%E5%AD%98/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/VictorZhangAI/memhack&#34;&gt;Source Code&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;看了jyy今年的虚拟内存，有感而发给GPT丢了几个prompt，产生了这些东西：&lt;/p&gt;&#xA;&lt;h2 id=&#34;mmap&#34;&gt;mmap&lt;/h2&gt;&#xA;&lt;p&gt;mmap() 是一个用于内存映射的syscall，可用于快速分配大段内存空间。&lt;/p&gt;</description>
    </item>
    <item>
      <title>ssh与网络杂项</title>
      <link>https://vzstless.moe/p/ssh%E4%B8%8E%E7%BD%91%E7%BB%9C%E6%9D%82%E9%A1%B9/</link>
      <pubDate>Thu, 13 Feb 2025 17:11:02 +0800</pubDate>
      <guid>https://vzstless.moe/p/ssh%E4%B8%8E%E7%BD%91%E7%BB%9C%E6%9D%82%E9%A1%B9/</guid>
      <description>&lt;h2 id=&#34;pwncollege&#34;&gt;pwn.college&lt;/h2&gt;&#xA;&lt;p&gt;先使用&lt;code&gt;ssh-keygen&lt;/code&gt;进行key的建立：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ssh-keygen -f key -N &lt;span class=&#34;s1&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;然后将公钥复制到pwn.college中&#xA;想要链接dojo时使用：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ssh -i key hacker@dojo.pwn.college&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;h2 id=&#34;从一次git-push失败说起&#34;&gt;从一次git push失败说起&lt;/h2&gt;&#xA;&lt;p&gt;2月13日，我的git莫名其妙push不到远端了，尝试排查问题，先使用了&lt;code&gt;ping&lt;/code&gt;，没发现任何问题，后使用&lt;code&gt;ssh -T git@github.com&lt;/code&gt;，不行，尝试重启&lt;code&gt;wsl --shutdown&lt;/code&gt;，不行，尝试查看GitHub是否今天有服务中断，进入 &lt;a href=&#34;https://www.githubstatus.com/&#34;&gt;https://www.githubstatus.com/&lt;/a&gt; 进行查看，一切正常，尝试unset掉proxy，未解决，进行nslookup，未解决，查看代理端口发现代理端口从1085更改至1087，重新设置&lt;code&gt;git config&lt;/code&gt;，解决&lt;/p&gt;</description>
    </item>
    <item>
      <title>关于6.1810</title>
      <link>https://vzstless.moe/p/%E5%85%B3%E4%BA%8E6.1810/</link>
      <pubDate>Thu, 06 Feb 2025 09:48:12 +0800</pubDate>
      <guid>https://vzstless.moe/p/%E5%85%B3%E4%BA%8E6.1810/</guid>
      <description>&lt;p&gt;终于，从寒假到现在磕磕绊绊算是把6.1810攻克了&lt;/p&gt;&#xA;&lt;p&gt;这个课分为几个部分，讲义，课本，xv6本身以及课程。讲义是给你稍微溜一眼这节课要干啥用的，课本的参考价值极高，几乎做实验过一会儿就要翻一下。xv6就不说了，公认的艺术品，功能齐全而且每个调用的路径都极其清晰，哪怕你不按课本瞎改一些部分看报错也是挺享受的。课，emm&amp;hellip;实在话，这个课是真干啊，真hacking啊，估计你讲义和书没看懂的话课程也看不懂。如果你没时间，只看Q&amp;amp;A就行了，代码示例可以跟着讲义自己弄。&lt;/p&gt;</description>
    </item>
    <item>
      <title>龙芯杯讲座笔记</title>
      <link>https://vzstless.moe/p/%E9%BE%99%E8%8A%AF%E6%9D%AF%E8%AE%B2%E5%BA%A7%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Sat, 25 Jan 2025 11:45:07 +0800</pubDate>
      <guid>https://vzstless.moe/p/%E9%BE%99%E8%8A%AF%E6%9D%AF%E8%AE%B2%E5%BA%A7%E7%AC%94%E8%AE%B0/</guid>
      <description>&lt;h2 id=&#34;龙芯杯介绍&#34;&gt;龙芯杯介绍&lt;/h2&gt;&#xA;&lt;p&gt;龙芯杯：CPU设计相关&lt;br&gt;&#xA;第9届&lt;br&gt;&#xA;loongarch类似于RISC-V&lt;/p&gt;&#xA;&lt;p&gt;初赛：CPU+L1 cache&lt;br&gt;&#xA;决赛配SoC外设和PMON BIOS&lt;br&gt;&#xA;团队赛发平台&lt;/p&gt;&#xA;&lt;p&gt;三月开始报名，八月上旬交初赛作品，八月中旬提交决赛作品&lt;br&gt;&#xA;个人赛名额不限&lt;/p&gt;</description>
    </item>
    <item>
      <title>商学的死亡</title>
      <link>https://vzstless.moe/p/%E5%95%86%E5%AD%A6%E7%9A%84%E6%AD%BB%E4%BA%A1/</link>
      <pubDate>Mon, 30 Dec 2024 08:08:50 +0800</pubDate>
      <guid>https://vzstless.moe/p/%E5%95%86%E5%AD%A6%E7%9A%84%E6%AD%BB%E4%BA%A1/</guid>
      <description>&lt;p&gt;理论上一个计算机都快学不明白的人不应该对外行的见识发表暴论，但既然学校选择了力推外专业“选修”，不修毕不了业，那我就不先礼后兵了&lt;br&gt;&#xA;许多人现如今已经不太看重所谓的MBA或者别的类似的商学学位，认为它们纯纯是二水货，事实证明他们没错。商学的死不是因为商学被什么别的哲学取代了，而是商学被计算机从思维意义上被取代了。这时候你大概率要问：是计算机代替了人力参与了商学相关的事务了吗？是也不是，因为不只是人类意义上的代替，还有思想层面的代替。&lt;br&gt;&#xA;几乎所有的管理学相关的思想在计算机哲学中都能找到代替品，而且研究层面上更加极端。流水线优化与对节拍异化为了CPU流水线性能优化，工作中心分配异化为了操作系统中的线程调度优化，公交线路布局异化为了找最长路径，观察次数异化为了单纯的统计题，工序优化异化为了对一个有向图进行拓扑排序，至于剩下的，大概率交给Excel或者大模型都可以完成。从思想和实践层面，计算机科学都直接毙掉了商学。&lt;br&gt;&#xA;也许商学的下一步应该把&lt;em&gt;UNIX编程艺术&lt;/em&gt;列为必读书目？但总之不应该是罗宾斯管理学这种老东西了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>系数为±1的n次方程根在复平面的分布</title>
      <link>https://vzstless.moe/p/%E7%B3%BB%E6%95%B0%E4%B8%BA1%E7%9A%84n%E6%AC%A1%E6%96%B9%E7%A8%8B%E6%A0%B9%E5%9C%A8%E5%A4%8D%E5%B9%B3%E9%9D%A2%E7%9A%84%E5%88%86%E5%B8%83/</link>
      <pubDate>Wed, 18 Dec 2024 21:38:49 +0800</pubDate>
      <guid>https://vzstless.moe/p/%E7%B3%BB%E6%95%B0%E4%B8%BA1%E7%9A%84n%E6%AC%A1%E6%96%B9%E7%A8%8B%E6%A0%B9%E5%9C%A8%E5%A4%8D%E5%B9%B3%E9%9D%A2%E7%9A%84%E5%88%86%E5%B8%83/</guid>
      <description>&lt;p&gt;（一篇在分享会上的稿件的留档）&lt;/p&gt;&#xA;&lt;h3 id=&#34;引子&#34;&gt;引子&lt;/h3&gt;&#xA;&lt;p&gt;Mathematica的基础语法三句话就能解决：&lt;/p&gt;&#xA;&lt;p&gt;1.内置函数的每个单词以大写字母开头。&lt;/p&gt;&#xA;&lt;p&gt;2.函数用[]传参。&lt;/p&gt;&#xA;&lt;p&gt;3.List用{}包围。&lt;/p&gt;</description>
    </item>
    <item>
      <title>生产力与生产关系</title>
      <link>https://vzstless.moe/p/%E7%94%9F%E4%BA%A7%E5%8A%9B%E4%B8%8E%E7%94%9F%E4%BA%A7%E5%85%B3%E7%B3%BB/</link>
      <pubDate>Mon, 16 Dec 2024 21:51:39 +0800</pubDate>
      <guid>https://vzstless.moe/p/%E7%94%9F%E4%BA%A7%E5%8A%9B%E4%B8%8E%E7%94%9F%E4%BA%A7%E5%85%B3%E7%B3%BB/</guid>
      <description>&lt;p&gt;注：以下讨论不涉及C，Python和JavaScript，因为你不用也得用，迟早有一天你会被这仨语言中的一个找上茬儿&lt;/p&gt;&#xA;&lt;p&gt;马原课本告诉我们，生产力决定生产关系，生产关系反作用于生产力。我们可以使用这个理论来给计算机行业中的错误思想套公式。现在许多人中流传着Java焦虑，好像Java死了我的工作就彻底寄了，然后经典的中年危机就业焦虑。然而大概率事实是不是Java不行，而是你从始至终就没入行。换语言不会使你干好，反而你长期囿于原先的生产关系而没有意识到自己的生产力本身落后，换了语言，原形毕露，没有论坛可查，自己失去了debug和查找性能瓶颈的能力。类似的还有软件工程。首先，你大概率不是CEO之类的要职，而你的第一个demo做得并不好甚至没做出来，你就觉得现在的软件生产模型不行，想从瀑布模型转变成敏捷模型。然而你没注意到敏捷模型对生产力的要求是达到了一定境界的，你的生产力并不足以满足敏捷模型短期迭代的内在要求，大概率结局是项目流产。&lt;/p&gt;</description>
    </item>
    <item>
      <title>关于一些网络热门课程</title>
      <link>https://vzstless.moe/p/%E5%85%B3%E4%BA%8E%E4%B8%80%E4%BA%9B%E7%BD%91%E7%BB%9C%E7%83%AD%E9%97%A8%E8%AF%BE%E7%A8%8B/</link>
      <pubDate>Sun, 15 Dec 2024 13:38:47 +0800</pubDate>
      <guid>https://vzstless.moe/p/%E5%85%B3%E4%BA%8E%E4%B8%80%E4%BA%9B%E7%BD%91%E7%BB%9C%E7%83%AD%E9%97%A8%E8%AF%BE%E7%A8%8B/</guid>
      <description>&lt;p&gt;事先声明，锐评不代表讨厌，相反，正是因为你有了足够的了解之后你才能知道为啥人家的课程好，我们的为什么烂。我感谢它们，在无数节水课中带我消磨时间，做有趣的事情。&lt;/p&gt;</description>
    </item>
    <item>
      <title>单周期处理器（LA）讲座笔记</title>
      <link>https://vzstless.moe/p/%E5%8D%95%E5%91%A8%E6%9C%9F%E5%A4%84%E7%90%86%E5%99%A8la%E8%AE%B2%E5%BA%A7%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Tue, 10 Dec 2024 16:55:17 +0800</pubDate>
      <guid>https://vzstless.moe/p/%E5%8D%95%E5%91%A8%E6%9C%9F%E5%A4%84%E7%90%86%E5%99%A8la%E8%AE%B2%E5%BA%A7%E7%AC%94%E8%AE%B0/</guid>
      <description>&lt;h2 id=&#34;单周期处理器la版本&#34;&gt;单周期处理器（LA版本）&lt;/h2&gt;&#xA;&lt;p&gt;延迟槽：曾几何时它很好，然而它非但无法解决延迟造成的流水线阻塞问题，而且会使微结构的设计复杂化，而且编译器并不能总是提取出有效指令填入流水线导致流水线中出现过量空指令，影响流水线性能&lt;/p&gt;</description>
    </item>
    <item>
      <title>一分钟上手Sublime</title>
      <link>https://vzstless.moe/p/%E4%B8%80%E5%88%86%E9%92%9F%E4%B8%8A%E6%89%8Bsublime/</link>
      <pubDate>Tue, 10 Dec 2024 16:52:35 +0800</pubDate>
      <guid>https://vzstless.moe/p/%E4%B8%80%E5%88%86%E9%92%9F%E4%B8%8A%E6%89%8Bsublime/</guid>
      <description>&lt;p&gt;（注：这篇文章成文于一年前，放在博客上只是为了留档）&lt;/p&gt;&#xA;&lt;p&gt;最开始接触这玩意儿其实是因为前端（一朝做贼，再想做好人可不容易啊），菜鸟教程推荐的编辑器里头有VSCode，Sublime和WebStorm，这仨里头VSC配C的环境给我配出心理阴影了，而且这玩意儿甚至原生不支持ctrl+滚轮缩放字体。WS要钱，一年两千八，我说我别tm做个前端还得贴钱打工，于是选了Sublime，不得不承认这玩意儿确实好使得一批，现在除了C，Python和Mathematica直接Sublime+命令行，真正做到了有高亮有编译器就能写。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Csapp Chapter4</title>
      <link>https://vzstless.moe/p/csapp-chapter4/</link>
      <pubDate>Tue, 10 Dec 2024 16:44:47 +0800</pubDate>
      <guid>https://vzstless.moe/p/csapp-chapter4/</guid>
      <description>&lt;h2 id=&#34;41&#34;&gt;4.1&lt;/h2&gt;&#xA;&lt;h3 id=&#34;prelude&#34;&gt;prelude&lt;/h3&gt;&#xA;&lt;p&gt;PC holds the address of the instruction that currently executed.&lt;/p&gt;&#xA;&lt;p&gt;registers, base pointer, stack pointer&lt;/p&gt;&#xA;&lt;p&gt;condition code: ZF, SF, OF&lt;/p&gt;&#xA;&lt;p&gt;memory(monolithic byte array)&lt;/p&gt;&#xA;&lt;p&gt;Types of encoding the Y-86 instructions:&lt;/p&gt;&#xA;&lt;p&gt;I-type, D-type and B-type&lt;/p&gt;&#xA;&lt;h3 id=&#34;instructions&#34;&gt;instructions&lt;/h3&gt;&#xA;&lt;p&gt;movq is split: I, R, M -&amp;gt; R, M&lt;/p&gt;&#xA;&lt;p&gt;AL instructions: addq, subq, andq, xorq (as there is no zero register in Y-86 processor, you must add an xorq instruction)&lt;/p&gt;&#xA;&lt;p&gt;jumps: jmp, &amp;lt;=, &amp;lt;, ==, !=, &amp;gt;=, &amp;gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Whoami</title>
      <link>https://vzstless.moe/p/whoami/</link>
      <pubDate>Mon, 09 Dec 2024 20:45:32 +0800</pubDate>
      <guid>https://vzstless.moe/p/whoami/</guid>
      <description>&lt;p&gt;(This is the first version of my README)&lt;/p&gt;&#xA;&lt;h1 id=&#34;vzstless-as-your-friend-or-thinker&#34;&gt;VZstless as your friend or thinker&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;🍥 Call this name as VictorZhang was signed up by somebody else&amp;hellip;&lt;/li&gt;&#xA;&lt;li&gt;👻 Love frontend in any perspective, digital, or web.&lt;/li&gt;&#xA;&lt;li&gt;🐣 Libre &amp;amp; OpenSource aholic.&lt;/li&gt;&#xA;&lt;li&gt;⭐ Still an undergraduate and a crazyone.&lt;/li&gt;&#xA;&lt;li&gt;🐧 A human-like history book or cheatsheet.&lt;/li&gt;&#xA;&lt;li&gt;✉️ &lt;a href=&#34;mailto:2319725508@qq.com&#34;&gt;2319725508@qq.com&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;🍀I work so I live.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://skillicons.dev/icons?i=arch,ubuntu,debian,bash,powershell,cloudflare,python,javascript,scala,go,c,haskell,ts,react,fastapi,git,github,githubactions,notion,ps,redis,vscode,vim,azure&#34; alt=&#34;skills&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://github-readme-stats-one-bice.vercel.app/api?username=victorzhangai&amp;count_private=true&amp;theme=calm&amp;show_icons=true&amp;include_all_commits=true&amp;role=OWNER,ORGANIZATION_MEMBER,COLLABORATOR&#34; alt=&#34;Where had I walked&#34; height=&#34;185px&#34; /&gt; &lt;!-- img src=&#34;https://github-readme-stats-one-bice.vercel.app/api/top-langs/?username=victorzhangai&amp;layout=compact&amp;langs_count=8&amp;theme=calm&amp;role=OWNER,ORGANIZATION_MEMBER&#34; alt=&#34;Mostly Used&#34; height=&#34;185px&#34; / --&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
